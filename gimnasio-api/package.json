{
  "name": "gimnasio-api",
  "version": "0.0.1-SNAPSHOT",
  "private": true,
  "description": "Description for gimnasio",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./gradlew",
    "backend:build-cache": "npm run backend:info && npm run backend:nohttp:test && npm run ci:e2e:package",
    "backend:doc:test": "./gradlew javadoc -x webapp -x webapp_test",
    "backend:info": "./gradlew -v",
    "backend:nohttp:test": "./gradlew checkstyleNohttp -x webapp -x webapp_test",
    "backend:start": "./gradlew -x webapp -x webapp_test",
    "backend:unit:test": "./gradlew test integrationTest -x webapp -x webapp_test -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.alphalab=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "npm run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch' npm:backend:start",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "postci:e2e:package": "cp build/libs/*.$npm_package_config_packaging e2e.$npm_package_config_packaging",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.com.alphalab=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "clean-www": "rimraf build/resources/main/static/app/{src,build/}",
    "cleanup": "rimraf build/resources/main/static/",
    "dapr:docker:down": "docker-compose -f src/main/docker/dapr-docker-build.yml down -v",
    "dapr:docker:init": "docker network create gimnasio-net",
    "dapr:docker:up": "npm run java:clean && npm run java:jar && docker-compose -f src/main/docker/dapr-docker-build.yml up -d --build gimnasio-api && docker-compose -f src/main/docker/dapr-docker-build.yml rm -f gimnasio-api-dapr && docker-compose -f src/main/docker/dapr-docker-build.yml up -d",
    "dapr:docker:up:about": "echo 'run dapr with building docker image'",
    "dapr:docker:up:ps": "docker-compose -f src/main/docker/dapr-docker-build.yml ps",
    "dapr:full:down": "docker-compose -f src/main/docker/dapr-docker-full.yml down -v",
    "dapr:full:up": "npm run infra:init && npm run java:jar && docker-compose -f src/main/docker/dapr-docker-full.yml up -d --build gimnasio-api  && docker-compose -f src/main/docker/dapr-docker-full.yml up -d",
    "dapr:full:up:ps": "docker-compose -f src/main/docker/dapr-docker-full.yml ps",
    "dapr:host:down": "docker-compose -f src/main/docker/dapr-docker-host.yml down -v",
    "dapr:host:up": "export DAPR_HTTP_PORT=35060 && docker-compose -f src/main/docker/dapr-docker-host.yml rm -f gimnasio-api-dapr && docker-compose -f src/main/docker/dapr-docker-host.yml up -d",
    "dapr:host:up:about": "echo 'run dapr in docker host mode, sidecar is pre-created in docker and connect to app using host port'",
    "dapr:host:up:ps": "docker-compose -f src/main/docker/dapr-docker-host.yml ps",
    "dapr:local:dash": "dapr dashboard -p 5000",
    "dapr:local:init": "dapr init --slim",
    "dapr:local:up": "echo 'make sure the dev environment is running!' && dapr run --components-path src/main/docker/dapr --app-id gimnasio-api --app-port 5050 --dapr-http-port 35050 ./gradlew",
    "dapr:local:up:about": "echo 'run dapr in local mode without dapr'",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:build": "npm run java:clean && npm run java:jar && docker build -t gimnasio-api:latest .",
    "docker:consul:down": "docker-compose -f src/main/docker/consul.yml down -v",
    "docker:consul:up": "docker-compose -f src/main/docker/consul.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/postgresql.yml down -v",
    "docker:db:up": "docker-compose -f src/main/docker/postgresql.yml up -d",
    "docker:keycloak:await": "echo \"Waiting for keycloak to start\" && wait-on -t 180000 http-get://localhost:9080/realms/jhipster && echo \"keycloak started\" || echo \"keycloak not running, make sure oauth2 server is running\"",
    "docker:keycloak:down": "docker-compose -f src/main/docker/keycloak.yml down -v",
    "docker:keycloak:up": "docker-compose -f src/main/docker/keycloak.yml up -d",
    "docker:others:await": "npm run docker:keycloak:await",
    "docker:others:down": "npm run docker:keycloak:down && npm run docker:consul:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:keycloak:up && npm run docker:consul:up",
    "infra:dev:down": "docker-compose -f src/main/docker/dev.yml down -v",
    "infra:dev:init": "docker network create gimnasio-net && sudo chmod -R 777 src/main/docker/realm-config",
    "infra:dev:up": "docker-compose -f src/main/docker/dev.yml up -d",
    "infra:dev:up:ps": "docker-compose -f src/main/docker/dev.yml ps",
    "infra:init": "sudo chmod -R 777 src/main/docker/realm-config && sudo chmod -R 777 src/main/docker/dapr",
    "java:clean": "./gradlew clean",
    "java:docker": "./gradlew bootJar -Pprod jibDockerBuild",
    "java:docker:arm64": "npm run java:docker -- -PjibArchitecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./gradlew bootJar -x test -x integrationTest",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./gradlew bootWar -Pwar -x test -x integrationTest",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "npm run lint -- --fix",
    "prettier:check": "prettier --check \"{,src/**/,webpack/,.blueprint/**/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/,.blueprint/**/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "pretest": "npm run lint",
    "test:watch": "npm run test -- --watch"
  },
  "config": {
    "backend_port": "5050",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/jest": "28.1.8",
    "@types/node": "16.11.56",
    "@typescript-eslint/eslint-plugin": "5.36.1",
    "@typescript-eslint/parser": "5.36.1",
    "concurrently": "7.3.0",
    "eslint": "8.23.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-webpack-plugin": "3.2.0",
    "folder-hash": "4.0.2",
    "generator-jhipster": "7.9.3",
    "jest": "28.1.3",
    "jest-date-mock": "1.0.8",
    "jest-environment-jsdom": "28.1.3",
    "jest-junit": "14.0.1",
    "jest-preset-angular": "12.2.2",
    "jest-sonar": "0.2.12",
    "merge-jsons-webpack-plugin": "2.0.1",
    "prettier": "2.7.1",
    "prettier-plugin-java": "1.6.2",
    "prettier-plugin-packagejson": "2.2.18",
    "rimraf": "3.0.2",
    "swagger-ui-dist": "4.14.0",
    "ts-jest": "28.0.8",
    "wait-on": "6.0.1"
  },
  "engines": {
    "node": ">=16.17.0"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "overrides": {
    "webpack": "5.74.0"
  }
}
